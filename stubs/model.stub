<?php

namespace {{ namespace }};

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
{{ soft_delete_import }}

/**
 * {{ class }} Model
 *
{{ properties }}
 */
class {{ class }} extends Model
{
    use HasFactory;
    {{ soft_delete_trait }}

    /**
     * The database connection that should be used by the model.
     */
    protected $connection = '{{ connection }}';
    
    /**
     * The table associated with the model.
     */
    protected $table = '{{ table }}';

    /**
     * The primary key associated with the table.
     */
    protected $primaryKey = '{{ primary_key }}';

    /**
     * Indicates if the model's ID is auto-incrementing.
     */
    public $incrementing = {{ incrementing }};

    /**
     * The data type of the auto-incrementing ID.
     */
    protected $keyType = '{{ key_type }}';

    /**
     * Indicates if the model should be timestamped.
     */
    public $timestamps = {{ timestamps }};

    /**
     * The storage format of the model's date columns.
     */
    protected $dateFormat = '{{ date_format }}';

    /**
     * The number of models to return for pagination.
     */
    {{ per_page_property }}

    {{ fillable_or_guarded }}

    /**
     * The attributes that should be hidden for serialization.
     */
    {{ hidden_property }}

    /**
     * The attributes that should be visible in serialization.
     */
    {{ visible_property }}

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        {{ casts }}
    ];

    /**
     * The model's default values for attributes.
     */
    {{ default_attributes }}

    /**
     * The relationships that should always be loaded.
     */
    {{ with_property }}

    /**
     * The accessors to append to the model's array form.
     */
    {{ appends_property }}

    /**
     * The relationships that should be touched on save.
     */
    {{ touches_property }}

    /**
     * Get the validation rules that apply to the model.
     *
     * @return array<string, string>
     */
    public static function rules(): array
    {
        return [
            {{ rules }}
        ];
    }

{{ relationships }}
}
